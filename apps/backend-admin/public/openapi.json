{
  "openapi": "3.0.0",
  "info": {
    "title": "Parawave-PTT API",
    "version": "1.0.0"
  },
  "paths": {
    "info": {
      "title": "ParaWave PTT API",
      "description": "API for managing PTT channels and real-time audio transmissions for paragliding pilots",
      "version": "1.0.0",
      "contact": {
        "name": "ParaWave Team",
        "email": "support@parawave.com"
      },
      "license": {
        "name": "MIT"
      }
    },
    "servers": {
      "0": {
        "url": "https://your-worker.your-subdomain.workers.dev",
        "description": "Production server"
      },
      "1": {
        "url": "http://localhost:8787",
        "description": "Development server"
      }
    },
    "/api/v1/channels": {
      "get": {
        "summary": "List channels",
        "description": "Retrieve a list of channels with optional filtering by type, location, and active status. Requires read permission.",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "site_local",
                "emergency",
                "general",
                "cross_country",
                "instructors"
              ]
            },
            "description": "Filter by channel type"
          },
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Filter by active status"
          },
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            },
            "description": "Latitude for location-based filtering"
          },
          {
            "in": "query",
            "name": "lon",
            "schema": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            },
            "description": "Longitude for location-based filtering"
          },
          {
            "in": "query",
            "name": "radius",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "Search radius in kilometers (requires lat/lon)"
          }
        ],
        "responses": {
          "200": {
            "description": "Channels retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "channels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Channel"
                          }
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of channels"
                        },
                        "filters_applied": {
                          "type": "object",
                          "description": "Applied filter parameters"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new channel",
        "description": "Creates a new PTT channel. Requires write permission. Emergency channels require admin permission.",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Channel name",
                    "example": "Val d'Isère - Site Local"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Channel description",
                    "example": "Canal local pour le site de parapente de Val d'Isère"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "site_local",
                      "emergency",
                      "general",
                      "cross_country",
                      "instructors"
                    ],
                    "description": "Channel type",
                    "example": "site_local"
                  },
                  "frequency": {
                    "type": "number",
                    "minimum": 118,
                    "maximum": 136.975,
                    "description": "Radio frequency in MHz",
                    "example": 143.9875
                  },
                  "flying_site_id": {
                    "type": "integer",
                    "description": "Associated flying site ID",
                    "example": 1234
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 50,
                    "description": "Maximum number of participants",
                    "example": 30
                  },
                  "difficulty": {
                    "type": "string",
                    "enum": [
                      "beginner",
                      "intermediate",
                      "advanced",
                      "expert"
                    ],
                    "description": "Channel difficulty level",
                    "example": "intermediate"
                  },
                  "location": {
                    "$ref": "#/components/schemas/Coordinates"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Channel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Channel"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/channels/{uuid}": {
      "get": {
        "summary": "Get channel details",
        "description": "Retrieve detailed information about a specific channel. Requires read permission. Admin users get additional statistics.",
        "tags": [
          "Channels"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Channel details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Channel"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "stats": {
                              "$ref": "#/components/schemas/ChannelStats"
                            }
                          }
                        }
                      ]
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update channel",
        "description": "Updates an existing channel. Requires write permission.",
        "tags": [
          "Channels"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Channel name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Channel description"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "site_local",
                      "emergency",
                      "general",
                      "cross_country",
                      "instructors"
                    ],
                    "description": "Channel type"
                  },
                  "frequency": {
                    "type": "number",
                    "description": "Radio frequency in MHz"
                  },
                  "flying_site_id": {
                    "type": "integer",
                    "description": "Associated flying site ID"
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "description": "Maximum number of participants"
                  },
                  "difficulty": {
                    "type": "string",
                    "enum": [
                      "beginner",
                      "intermediate",
                      "advanced",
                      "expert"
                    ],
                    "description": "Channel difficulty level"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "lon": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                      }
                    },
                    "description": "Channel location coordinates"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Channel updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "site_local",
                            "emergency",
                            "general",
                            "cross_country",
                            "instructors"
                          ]
                        },
                        "frequency": {
                          "type": "number"
                        },
                        "flying_site_id": {
                          "type": "integer"
                        },
                        "is_active": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "creator_user_id": {
                          "type": "string"
                        },
                        "max_participants": {
                          "type": "integer"
                        },
                        "difficulty": {
                          "type": "string",
                          "enum": [
                            "beginner",
                            "intermediate",
                            "advanced",
                            "expert"
                          ]
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lon": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid JSON payload"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Authentication failed"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Channel not found"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to update channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Failed to update channel"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete channel",
        "description": "Deletes a channel (soft delete by default). Requires admin permission. Use ?hard=true for permanent deletion.",
        "tags": [
          "Channels"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          },
          {
            "in": "query",
            "name": "hard",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Perform hard delete (permanent removal)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Channel deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Channel deactivated"
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "hard_delete": {
                          "type": "boolean",
                          "description": "Whether hard delete was performed"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Admin permission required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to delete channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/channels/with-uuid": {
      "post": {
        "summary": "Create channel with specific UUID",
        "description": "Creates a new channel with a manually specified UUID. UUID must be unique.",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateChannelRequest"
                  },
                  {
                    "type": "object",
                    "required": [
                      "uuid"
                    ],
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Specific UUID for the channel"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Channel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or UUID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "summary": "Health check",
        "description": "Returns the health status of the PTT API service and its dependencies.",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Service health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "healthy",
                            "degraded",
                            "unhealthy"
                          ],
                          "example": "healthy"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "version": {
                          "type": "string",
                          "example": "1.0.0"
                        },
                        "api_version": {
                          "type": "string",
                          "example": "v1"
                        },
                        "services": {
                          "type": "object",
                          "properties": {
                            "database": {
                              "type": "string",
                              "enum": [
                                "operational",
                                "degraded",
                                "down"
                              ],
                              "example": "operational"
                            },
                            "cache": {
                              "type": "string",
                              "enum": [
                                "operational",
                                "degraded",
                                "down"
                              ],
                              "example": "operational"
                            },
                            "channels": {
                              "type": "string",
                              "enum": [
                                "operational",
                                "degraded",
                                "down"
                              ],
                              "example": "operational"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/channels/{uuid}/join": {
      "post": {
        "summary": "Join a channel",
        "description": "Join a PTT channel as participant. Requires access permission for the specific channel (access:{uuid}) or admin permission (admin:api).",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "requestBody": {
          "description": "Optional location information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinChannelRequest"
              },
              "example": {
                "location": {
                  "lat": 45.929681,
                  "lon": 6.876345
                },
                "ephemeral_push_token": "abcd1234-push-token-from-ios-framework"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully joined channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinChannelResponse"
                },
                "example": {
                  "success": true,
                  "participant": {
                    "user_id": "auth0|507f1f77bcf86cd799439011",
                    "username": "pilot123",
                    "join_time": "2025-08-11T10:30:00.000Z",
                    "last_seen": "2025-08-11T10:30:00.000Z",
                    "connection_quality": "good",
                    "is_transmitting": false
                  },
                  "channel_info": {
                    "name": "Chamonix - Mont Blanc",
                    "participants_count": 3,
                    "max_participants": 20
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (channel full, inactive, etc.)"
          },
          "403": {
            "description": "Access denied - insufficient permissions"
          },
          "404": {
            "description": "Channel not found"
          }
        }
      }
    },
    "/api/v1/channels/{uuid}/leave": {
      "post": {
        "summary": "Leave a channel",
        "description": "Leave a PTT channel. Requires access permission for the specific channel (access:{uuid}).",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveChannelResponse"
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request (not a participant, etc.)"
          },
          "403": {
            "description": "Access denied - insufficient permissions"
          }
        }
      },
      "delete": {
        "summary": "Leave a channel (alternative method)",
        "description": "Leave a PTT channel using DELETE method. Requires access permission for the specific channel (access:{uuid}).",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveChannelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (not a participant, etc.)"
          },
          "403": {
            "description": "Access denied - insufficient permissions"
          }
        }
      }
    },
    "/api/v1/channels/{uuid}/participants": {
      "get": {
        "summary": "Get channel participants",
        "description": "Retrieve list of current participants in a channel. Requires access permission for the specific channel (access:{uuid}).",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Participants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChannelParticipant"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "description": "Total number of participants"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "user_id": "auth0|507f1f77bcf86cd799439011",
                      "username": "pilot123",
                      "join_time": "2025-08-11T10:30:00.000Z",
                      "last_seen": "2025-08-11T10:35:00.000Z",
                      "connection_quality": "good",
                      "is_transmitting": false
                    }
                  ],
                  "total_count": 1,
                  "timestamp": "2025-08-11T10:35:00.000Z",
                  "version": "1.0.0"
                }
              }
            }
          },
          "403": {
            "description": "Access denied - insufficient permissions"
          },
          "404": {
            "description": "Channel not found"
          }
        }
      }
    },
    "/api/v1/channels/{uuid}/update-token": {
      "put": {
        "summary": "Update ephemeral push token",
        "description": "Update the ephemeral APNs PTT push token for a channel participant. This token is provided by the iOS Push-to-Talk framework after joining a channel.",
        "tags": [
          "Channels"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Channel UUID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ephemeral_push_token": {
                    "type": "string",
                    "description": "Ephemeral APNs PTT token from iOS framework"
                  }
                },
                "required": [
                  "ephemeral_push_token"
                ]
              },
              "example": {
                "ephemeral_push_token": "abcd1234-push-token-from-ios-framework"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Push token updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing token, not a participant, etc.)"
          },
          "403": {
            "description": "Access denied - insufficient permissions"
          }
        }
      }
    },
    "/api/v1/transmissions/start": {
      "post": {
        "summary": "Start PTT transmission",
        "description": "Initiate a new PTT audio transmission in a channel. Maximum transmission duration is 30 seconds.",
        "tags": [
          "Transmissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PTTStartTransmissionRequest"
              },
              "examples": {
                "basic": {
                  "summary": "Basic transmission request",
                  "value": {
                    "channel_uuid": "550e8400-e29b-41d4-a716-446655440000",
                    "audio_format": "aac-lc"
                  }
                },
                "with_device_info": {
                  "summary": "With device information",
                  "value": {
                    "channel_uuid": "550e8400-e29b-41d4-a716-446655440000",
                    "audio_format": "opus",
                    "device_info": {
                      "model": "iPhone 15 Pro",
                      "os_version": "17.2"
                    },
                    "expected_duration": 15
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transmission started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTTStartTransmissionResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "session_id": "123e4567-e89b-12d3-a456-426614174000",
                      "channel_uuid": "550e8400-e29b-41d4-a716-446655440000",
                      "max_duration": 30,
                      "websocket_url": "wss://your-worker.your-subdomain.workers.dev/api/v1/transmissions/ws/550e8400-e29b-41d4-a716-446655440000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missing_channel": {
                    "value": {
                      "success": false,
                      "error": "channel_uuid is required"
                    }
                  },
                  "invalid_format": {
                    "value": {
                      "success": false,
                      "error": "Valid audio_format is required (aac-lc, opus, pcm)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Channel access denied or already transmitting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "access_denied": {
                    "value": {
                      "success": false,
                      "error": "Channel access denied"
                    }
                  },
                  "already_transmitting": {
                    "value": {
                      "success": false,
                      "error": "Another transmission is already active"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transmissions/{session_id}/chunk": {
      "post": {
        "summary": "Send audio chunk",
        "description": "Send a chunk of audio data for an active transmission. Chunks must be sent in sequential order.",
        "tags": [
          "Transmissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The transmission session ID returned from start transmission"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PTTAudioChunkRequest"
              },
              "examples": {
                "basic": {
                  "summary": "Basic audio chunk",
                  "value": {
                    "audio_data": "UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=",
                    "sequence_number": 0,
                    "timestamp": 1640995200.123,
                    "duration_ms": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audio chunk processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTTAudioChunkResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "sequence_number": 0,
                      "total_chunks": 1,
                      "duration_so_far": 0.1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missing_data": {
                    "value": {
                      "success": false,
                      "error": "audio_data (base64) is required"
                    }
                  },
                  "invalid_sequence": {
                    "value": {
                      "success": false,
                      "error": "Invalid sequence_number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "success": false,
                      "error": "Transmission session not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transmissions/{session_id}/end": {
      "post": {
        "summary": "End PTT transmission",
        "description": "End an active PTT transmission and get transmission statistics.",
        "tags": [
          "Transmissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The transmission session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "session_id",
                  "total_duration_ms"
                ],
                "properties": {
                  "session_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The transmission session ID (must match path parameter)"
                  },
                  "total_duration_ms": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Total transmission duration in milliseconds"
                  },
                  "final_location": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90,
                        "description": "Final latitude"
                      },
                      "lon": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180,
                        "description": "Final longitude"
                      }
                    },
                    "description": "Optional final location when transmission ended"
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "completed",
                      "cancelled",
                      "timeout",
                      "error"
                    ],
                    "default": "completed",
                    "description": "Reason for ending the transmission"
                  }
                }
              },
              "examples": {
                "completed": {
                  "summary": "Normal completion with location",
                  "value": {
                    "session_id": "ptt_04b242cb-91b5-4e6d-a10a-27099fb6e866_user123_1640995200_abc123",
                    "total_duration_ms": 5200,
                    "final_location": {
                      "lat": 45.929681,
                      "lon": 6.876345
                    },
                    "reason": "completed"
                  }
                },
                "cancelled": {
                  "summary": "User cancelled without location",
                  "value": {
                    "session_id": "ptt_04b242cb-91b5-4e6d-a10a-27099fb6e866_user456_1640995300_def456",
                    "total_duration_ms": 1500,
                    "reason": "cancelled"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transmission ended successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTTEndTransmissionResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "session_summary": {
                        "total_duration_ms": 5200,
                        "chunks_received": 52,
                        "total_bytes": 524288,
                        "participants_notified": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "session_mismatch": {
                    "value": {
                      "success": false,
                      "error": "session_id mismatch"
                    }
                  },
                  "invalid_duration": {
                    "value": {
                      "success": false,
                      "error": "Valid total_duration_ms is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found or already ended",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "success": false,
                      "error": "Transmission session not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transmissions/active/{channel_uuid}": {
      "get": {
        "summary": "Get active transmission",
        "description": "Get information about the currently active transmission in a channel, if any.",
        "tags": [
          "Transmissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "channel_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The channel UUID to check for active transmissions"
          }
        ],
        "responses": {
          "200": {
            "description": "Active transmission information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTTActiveTransmissionResponse"
                },
                "examples": {
                  "with_active": {
                    "summary": "Channel has active transmission",
                    "value": {
                      "success": true,
                      "transmission": {
                        "session_id": "123e4567-e89b-12d3-a456-426614174000",
                        "user_id": "auth0|user123",
                        "username": "Pilot Alpha",
                        "started_at": "2024-01-15T10:30:00Z",
                        "duration": 5.2,
                        "audio_format": "aac-lc"
                      }
                    }
                  },
                  "no_active": {
                    "summary": "No active transmission",
                    "value": {
                      "success": true,
                      "transmission": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Channel access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transmissions/ws/{channel_uuid}": {
      "get": {
        "summary": "WebSocket upgrade for real-time PTT",
        "description": "Upgrade HTTP connection to WebSocket for real-time PTT audio transmission. Used for receiving live audio broadcasts.",
        "tags": [
          "Transmissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "channel_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The channel UUID for real-time PTT communication"
          }
        ],
        "responses": {
          "101": {
            "description": "WebSocket connection upgraded successfully",
            "headers": {
              "Upgrade": {
                "schema": {
                  "type": "string",
                  "example": "websocket"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "Upgrade"
                }
              },
              "Sec-WebSocket-Accept": {
                "schema": {
                  "type": "string",
                  "description": "WebSocket handshake response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid WebSocket request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "not_websocket": {
                    "value": {
                      "success": false,
                      "error": "WebSocket upgrade required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Channel access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth0-management/token": {
      "get": {
        "summary": "Get Auth0 Management API token",
        "description": "Returns a valid Auth0 Management API token for users with tenant:admin permission. Tokens are cached to avoid exceeding quotas.",
        "tags": [
          "Auth0 Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Management API token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "Auth0 Management API token"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Bearer"
                        },
                        "expires_in": {
                          "type": "integer",
                          "description": "Token expiration time in seconds"
                        },
                        "cached": {
                          "type": "boolean",
                          "description": "Whether the token was retrieved from cache"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - tenant:admin required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to generate Management API token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "site_local",
              "emergency",
              "general",
              "cross_country",
              "instructors"
            ]
          },
          "frequency": {
            "type": "number"
          },
          "flying_site_id": {
            "type": "integer"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "creator_user_id": {
            "type": "string"
          },
          "max_participants": {
            "type": "integer"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced",
              "expert"
            ]
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lon": {
                "type": "number"
              }
            }
          }
        }
      },
      "ChannelStats": {
        "type": "object",
        "properties": {
          "total_participants": {
            "type": "integer"
          },
          "active_participants": {
            "type": "integer"
          },
          "total_messages": {
            "type": "integer"
          },
          "total_transmissions": {
            "type": "integer"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Coordinates": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "minimum": -90,
            "maximum": 90,
            "description": "Latitude"
          },
          "lon": {
            "type": "number",
            "minimum": -180,
            "maximum": 180,
            "description": "Longitude"
          }
        }
      },
      "ChannelParticipant": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User identifier from Auth0"
          },
          "username": {
            "type": "string",
            "description": "Display name for the user"
          },
          "join_time": {
            "type": "string",
            "format": "date-time",
            "description": "When the user joined the channel"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "description": "Last activity timestamp"
          },
          "location": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "connection_quality": {
            "type": "string",
            "enum": [
              "poor",
              "fair",
              "good",
              "excellent"
            ],
            "description": "Network connection quality"
          },
          "is_transmitting": {
            "type": "boolean",
            "description": "Whether the user is currently transmitting"
          },
          "ephemeral_push_token": {
            "type": "string",
            "description": "Ephemeral APNs PTT token (only visible to admin users)"
          },
          "os_type": {
            "type": "string",
            "enum": [
              "iOS",
              "Android",
              "Web",
              "Desktop",
              "Unknown"
            ],
            "description": "Operating system type",
            "example": "iOS"
          },
          "os_version": {
            "type": "string",
            "description": "Operating system version",
            "example": "17.5.1"
          },
          "app_version": {
            "type": "string",
            "description": "Application version",
            "example": "1.2.3"
          }
        }
      },
      "JoinChannelRequest": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Coordinates",
            "description": "Optional user location when joining"
          },
          "ephemeral_push_token": {
            "type": "string",
            "description": "Ephemeral APNs PTT token from iOS framework for push notifications"
          },
          "device_info": {
            "type": "object",
            "properties": {
              "os": {
                "type": "string",
                "description": "Operating system",
                "example": "iOS",
                "enum": [
                  "iOS",
                  "Android",
                  "Web",
                  "Desktop",
                  "Unknown"
                ]
              },
              "os_version": {
                "type": "string",
                "description": "Operating system version",
                "example": "17.5.1"
              },
              "app_version": {
                "type": "string",
                "description": "Application version",
                "example": "1.2.3"
              },
              "user_agent": {
                "type": "string",
                "description": "Full user agent string for debugging",
                "example": "ParaWave/1.2.3 (iPhone; iOS 17.5.1; Scale/3.00)"
              }
            },
            "description": "Optional device and application information"
          }
        }
      },
      "JoinChannelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "participant": {
            "$ref": "#/components/schemas/ChannelParticipant"
          },
          "channel_info": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Channel name"
              },
              "participants_count": {
                "type": "integer",
                "description": "Current number of participants"
              },
              "max_participants": {
                "type": "integer",
                "description": "Maximum allowed participants"
              }
            }
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      },
      "LeaveChannelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      },
      "PTTStartTransmissionRequest": {
        "type": "object",
        "required": [
          "channel_uuid",
          "audio_format"
        ],
        "properties": {
          "channel_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the channel to transmit in"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "aac-lc",
              "opus",
              "pcm"
            ],
            "description": "Audio encoding format"
          },
          "device_info": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "description": "Device model"
              },
              "os_version": {
                "type": "string",
                "description": "Operating system version"
              }
            },
            "description": "Optional device information"
          },
          "expected_duration": {
            "type": "number",
            "minimum": 0,
            "maximum": 30,
            "description": "Expected transmission duration in seconds (max 30s)"
          },
          "location": {
            "$ref": "#/components/schemas/Coordinates",
            "description": "Optional user location at the time of transmission start"
          }
        }
      },
      "PTTStartTransmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique transmission session ID"
          },
          "channel_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Channel UUID"
          },
          "max_duration": {
            "type": "integer",
            "example": 30,
            "description": "Maximum transmission duration in seconds"
          },
          "websocket_url": {
            "type": "string",
            "description": "WebSocket URL for real-time audio streaming"
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      },
      "PTTAudioChunkRequest": {
        "type": "object",
        "required": [
          "audio_data",
          "sequence_number"
        ],
        "properties": {
          "audio_data": {
            "type": "string",
            "format": "byte",
            "description": "Base64-encoded audio chunk data"
          },
          "sequence_number": {
            "type": "integer",
            "minimum": 0,
            "description": "Sequential chunk number starting from 0"
          },
          "timestamp": {
            "type": "number",
            "description": "Unix timestamp when audio was recorded"
          },
          "duration_ms": {
            "type": "number",
            "minimum": 0,
            "description": "Duration of this audio chunk in milliseconds"
          }
        }
      },
      "PTTAudioChunkResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "sequence_number": {
            "type": "integer",
            "description": "Acknowledged sequence number"
          },
          "total_chunks": {
            "type": "integer",
            "description": "Total chunks received so far"
          },
          "duration_so_far": {
            "type": "number",
            "description": "Total transmission duration so far in seconds"
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      },
      "PTTEndTransmissionRequest": {
        "type": "object",
        "required": [
          "session_id",
          "total_duration_ms"
        ],
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "The transmission session ID (must match path parameter)"
          },
          "total_duration_ms": {
            "type": "integer",
            "minimum": 1,
            "description": "Total transmission duration in milliseconds"
          },
          "final_location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Final latitude"
              },
              "lon": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Final longitude"
              }
            },
            "description": "Optional final location when transmission ended"
          },
          "reason": {
            "type": "string",
            "enum": [
              "completed",
              "cancelled",
              "timeout",
              "error"
            ],
            "default": "completed",
            "description": "Reason for ending the transmission"
          }
        }
      },
      "PTTEndTransmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "session_summary": {
            "type": "object",
            "properties": {
              "total_duration_ms": {
                "type": "integer",
                "description": "Total transmission duration in milliseconds"
              },
              "chunks_received": {
                "type": "integer",
                "description": "Total number of audio chunks received"
              },
              "total_bytes": {
                "type": "integer",
                "description": "Total bytes of audio data received"
              },
              "participants_notified": {
                "type": "integer",
                "description": "Number of participants who were notified of the transmission"
              }
            },
            "description": "Transmission session summary (only present on success)"
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      },
      "PTTActiveTransmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "transmission": {
            "type": "object",
            "properties": {
              "session_id": {
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "started_at": {
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "type": "number",
                "description": "Current duration in seconds"
              },
              "audio_format": {
                "type": "string",
                "enum": [
                  "aac-lc",
                  "opus",
                  "pcm"
                ]
              }
            },
            "description": "Active transmission details, null if none active"
          },
          "error": {
            "type": "string",
            "description": "Error message if success is false"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Channels",
      "description": "PTT channel management operations"
    },
    {
      "name": "Transmissions",
      "description": "Real-time PTT audio transmission operations"
    },
    {
      "name": "System",
      "description": "System health and status endpoints"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}